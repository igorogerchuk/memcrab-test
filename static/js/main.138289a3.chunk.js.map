{"version":3,"sources":["components/AvarageRow/AvarageRow.module.css","components/Array/Array.module.css","redux/types.js","services/randomArray.js","components/Inputs.jsx","redux/actions.js","services/closestNumbers.js","redux/selectors.js","components/ArrayLine.jsx","services/avarageRow.js","components/AvarageRow/AvarageRow.jsx","components/Array/Array.jsx","components/AddLineButton.jsx","components/App.jsx","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","types","REMOVE_LINE","ADD_LINE","SAVE_ARRAY","INCREASE","SAVE_PARAMS","uuidv4","require","createRandomArray","lines","columns","array","i","id","cells","j","amount","Math","floor","random","Inputs","state","m","n","x","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","onSaveParams","onSaveArray","alert","this","onSubmit","type","name","onChange","placeholder","Component","connect","dispatch","payload","actions","params","getClosestNumbers","numbersQty","origin","inlineArray","forEach","line","element","push","sort","a","b","abs","slice","getArray","getColumnsQty","getNumbersQty","TdSum","styled","td","Td","background","ArrayLine","hover","closestNumbers","sumHover","sum","illuminateHandler","numberQty","increaseHandler","onIncrease","hoverHandler","Number","innerText","onRemove","map","bg","percents","includes","key","onClick","onMouseOver","onMouseOut","toFixed","onMouseEnter","onMouseLeave","reduce","selectors","ownProps","getAvarageRow","avarageRow","columnQty","length","columnTotal","AvarageRow","className","styles","avarage","Array","matrix","AddLineButton","addHandler","lineLength","onAdd","newLine","App","action","el","reducer","combineReducers","undefined","filter","l","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.138289a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avarage\":\"AvarageRow_avarage__2TjEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"matrix\":\"Array_matrix__1r8Hw\"};","const types = {\r\n  REMOVE_LINE: \"REMOVE_LINE\",\r\n  ADD_LINE: \"ADD_LINE\",\r\n  SAVE_ARRAY: \"SAVE_ARRAY\",\r\n  INCREASE: \"INCREASE\",\r\n  SAVE_PARAMS: \"SAVE_PARAMS\"\r\n};\r\n\r\nexport default types;\r\n","const uuidv4 = require(\"uuid/v4\");\r\n\r\nconst createRandomArray = (lines, columns) => {\r\n  const array = [];\r\n  for (let i = 0; i < lines; i++) {\r\n    array[i] = { id: uuidv4(), cells: [] };\r\n    for (let j = 0; j < columns; j++) {\r\n      array[i].cells[j] = {\r\n        id: \"number\" + uuidv4(),\r\n        amount: Math.floor(Math.random() * 1000)\r\n      };\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport default createRandomArray;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\nimport createRandomArray from \"../services/randomArray\";\r\n\r\nclass Inputs extends Component {\r\n  state = { m: \"\", n: \"\", x: \"\" };\r\n\r\n  inputHandler = e => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case \"m\":\r\n        this.setState(state => ({ ...state, m: value }));\r\n        break;\r\n      case \"n\":\r\n        this.setState(state => ({ ...state, n: value }));\r\n        break;\r\n      case \"x\":\r\n        this.setState(state => ({ ...state, x: value }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const { m, n, x } = this.state;\r\n    const { onSaveParams, onSaveArray } = this.props;\r\n    if (m <= 0 || n <= 0 || x < 0) {\r\n      alert(\"array parameters must be more then 0\");\r\n      return;\r\n    }\r\n    onSaveArray(createRandomArray(m, n));\r\n    onSaveParams({ n, x });\r\n\r\n    this.setState({ m: \"\", n: \"\", x: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { m, n, x } = this.state;\r\n    return (\r\n      <div>\r\n        <p>Enter table parameters2</p>\r\n        <form onSubmit={this.submitHandler}>\r\n          <label>\r\n            Lines quantity:{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              name=\"lines\"\r\n              id=\"m\"\r\n              onChange={this.inputHandler}\r\n              value={m}\r\n              placeholder=\"0\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Columns quantity:\r\n            <input\r\n              type=\"number\"\r\n              name=\"columns\"\r\n              id=\"n\"\r\n              onChange={this.inputHandler}\r\n              value={n}\r\n              placeholder=\"0\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Illuminated cells quantity:\r\n            <input\r\n              type=\"number\"\r\n              name=\"illuminate\"\r\n              id=\"x\"\r\n              onChange={this.inputHandler}\r\n              value={x}\r\n              placeholder=\"0\"\r\n            />\r\n          </label>\r\n          <input type=\"submit\" value=\"Generate\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSaveArray: array => dispatch(actions.saveArray(array)),\r\n    onSaveParams: params => dispatch(actions.saveParams(params))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Inputs);\r\n","import types from \"./types\";\r\n\r\nexport const removeLine = id => {\r\n  return {\r\n    type: types.REMOVE_LINE,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const addLine = newLine => {\r\n  return {\r\n    type: types.ADD_LINE,\r\n    payload: { newLine }\r\n  };\r\n};\r\n\r\nexport const saveArray = array => {\r\n  return {\r\n    type: types.SAVE_ARRAY,\r\n    payload: { array }\r\n  };\r\n};\r\n\r\nexport const increase = id => {\r\n  return {\r\n    type: types.INCREASE,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const saveParams = params => {\r\n  return {\r\n    type: types.SAVE_PARAMS,\r\n    payload: { params }\r\n  };\r\n};\r\n","const getClosestNumbers = (array, id, numbersQty) => {\r\n  let origin;\r\n  const inlineArray = [];\r\n  array.forEach(line =>\r\n    line.cells.forEach(element => {\r\n      if (element.id === id) {\r\n        origin = element;\r\n      } else {\r\n        inlineArray.push(element);\r\n      }\r\n    })\r\n  );\r\n  inlineArray.sort(\r\n    (a, b) =>\r\n      Math.abs(a.amount - origin.amount) - Math.abs(b.amount - origin.amount)\r\n  );\r\n  return [origin, ...inlineArray.slice(0, numbersQty)];\r\n};\r\n\r\nexport default getClosestNumbers;\r\n","export const getArray = state => state.array;\r\n\r\nexport const getColumnsQty = state => state.params.n;\r\n\r\nexport const getNumbersQty = state => state.params.x;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\nimport styled from \"styled-components\";\r\nimport getClosestNumbers from \"../services/closestNumbers\";\r\nimport * as selectors from \"../redux/selectors\";\r\n\r\nconst TdSum = styled.td`\r\n  background-color: cadetblue;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  background: ${props => props.background};\r\n  cursor: pointer;\r\n`;\r\n\r\nclass ArrayLine extends Component {\r\n  state = { hover: false, closestNumbers: [], sumHover: false, sum: 0 };\r\n\r\n  illuminateHandler = e => {\r\n    const { id } = e.target;\r\n    if (id.slice(0, 6) !== \"number\") {\r\n      return;\r\n    }\r\n    const { array, numberQty } = this.props;\r\n    const closestNumbers = this.state.hover\r\n      ? []\r\n      : getClosestNumbers(array, id, numberQty);\r\n    this.setState(state => {\r\n      return { ...state, hover: !state.hover, closestNumbers };\r\n    });\r\n  };\r\n\r\n  increaseHandler = e => {\r\n    const { onIncrease } = this.props;\r\n    onIncrease(e.target.id);\r\n  };\r\n\r\n  hoverHandler = e => {\r\n    const value = Number(e.target.innerText);\r\n    this.setState(state => {\r\n      return {\r\n        sumHover: !state.sumHover,\r\n        sum: value\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { line, onRemove } = this.props;\r\n    const { closestNumbers, sumHover, sum } = this.state;\r\n\r\n    return (\r\n      <tr>\r\n        {line.map(element => {\r\n          let bg = \"white\";\r\n          const percents = (element.amount / sum) * 100;\r\n          if (closestNumbers.includes(element)) {\r\n            bg = \"green\";\r\n          }\r\n          if (sumHover) {\r\n            bg = `linear-gradient(to top, #fff200, #1e9600 ${percents}%, transparent ${percents}%)`;\r\n          }\r\n          return (\r\n            <Td\r\n              key={element.id}\r\n              id={element.id}\r\n              onClick={this.increaseHandler}\r\n              background={bg}\r\n              onMouseOver={this.illuminateHandler}\r\n              onMouseOut={this.illuminateHandler}\r\n            >\r\n              {sumHover ? percents.toFixed(1) + \"%\" : element.amount}\r\n            </Td>\r\n          );\r\n        })}\r\n        <TdSum\r\n          onMouseEnter={this.hoverHandler}\r\n          onMouseLeave={this.hoverHandler}\r\n        >\r\n          {line.reduce((sum, element) => (sum += element.amount), 0)}\r\n        </TdSum>\r\n        <td>\r\n          <button onClick={onRemove}>Remove</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    array: selectors.getArray(state),\r\n    numberQty: selectors.getNumbersQty(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onRemove: () => dispatch(actions.removeLine(ownProps.id)),\r\n    onIncrease: id => dispatch(actions.increase(id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayLine);\r\n","const uuidv4 = require(\"uuid/v4\");\r\n\r\nconst getAvarageRow = array => {\r\n  const avarageRow = [];\r\n  const columnQty = array[0].cells.length;\r\n  for (let j = 0; j < columnQty; j++) {\r\n    let columnTotal = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n      columnTotal += array[i].cells[j].amount;\r\n    }\r\n    avarageRow.push({\r\n      id: uuidv4(),\r\n      amount: (columnTotal / columnQty).toFixed(2)\r\n    });\r\n  }\r\n  return avarageRow;\r\n};\r\n\r\nexport default getAvarageRow;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport getAvarageRow from \"../../services/avarageRow\";\r\nimport styles from \"./AvarageRow.module.css\";\r\nimport * as selectors from \"../../redux/selectors\";\r\n\r\nclass AvarageRow extends Component {\r\n  render() {\r\n    const { array } = this.props;\r\n    return (\r\n      <tr className={styles.avarage}>\r\n        {getAvarageRow(array).map(element => {\r\n          return (\r\n            <td key={element.id} id={element.id}>\r\n              {element.amount}\r\n            </td>\r\n          );\r\n        })}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { array: selectors.getArray(state) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AvarageRow);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ArrayLine from \"../ArrayLine\";\r\nimport AvarageRow from \"../AvarageRow\";\r\nimport styles from \"./Array.module.css\";\r\nimport * as selectors from \"../../redux/selectors\";\r\n\r\nclass Array extends Component {\r\n  render() {\r\n    const { array } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <table className={styles.matrix}>\r\n          <tbody>\r\n            {array.map(line => (\r\n              <ArrayLine key={line.id} id={line.id} line={line.cells} />\r\n            ))}\r\n            <AvarageRow />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    array: selectors.getArray(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Array);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../redux/actions\";\r\nimport * as selectors from \"../redux/selectors\";\r\nimport createRandomArray from \"../services/randomArray\";\r\n\r\nclass AddLineButton extends Component {\r\n  addHandler = () => {\r\n    const { lineLength, onAdd } = this.props;\r\n    onAdd(createRandomArray(1, lineLength));\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={this.addHandler}>Add Line</button>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAdd: newLine => dispatch(actions.addLine(newLine))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lineLength: selectors.getColumnsQty(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddLineButton);\r\n","import React, { Component } from \"react\";\nimport Inputs from \"./Inputs\";\nimport Array from \"./Array\";\nimport AddLineButton from \"./AddLineButton\";\nimport { connect } from \"react-redux\";\nimport * as selectors from \"../redux/selectors\";\n\nclass App extends Component {\n  render() {\n    const { array } = this.props;\n    return (\n      <>\n        <Inputs />\n        {array.length > 0 && <Array />}\n        {array.length > 0 && <AddLineButton />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { array: selectors.getArray(state) };\n};\n\nexport default connect(mapStateToProps)(App);\n","import types from \"./types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst element = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case types.INCREASE:\r\n      return state.id === payload.id\r\n        ? { ...state, amount: (state.amount += 1) }\r\n        : state;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst line = (state, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_LINE:\r\n      return action.payload.newLine;\r\n    case types.REMOVE_LINE:\r\n      return state.id !== action.payload.id;\r\n    case types.INCREASE:\r\n      return state.map(el => element(el, action));\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst arrayReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ADD_LINE:\r\n      return [...state, ...line(undefined, action)];\r\n    case types.REMOVE_LINE:\r\n      return state.filter(l => line(l, action));\r\n    case types.SAVE_ARRAY:\r\n      return action.payload.array;\r\n    case types.INCREASE:\r\n      return state.map(l => {\r\n        return { ...l, cells: line(l.cells, action) };\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst paramsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_PARAMS:\r\n      return action.payload.params;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  array: arrayReducer,\r\n  params: paramsReducer\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}