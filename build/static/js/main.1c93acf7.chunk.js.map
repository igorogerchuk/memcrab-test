{"version":3,"sources":["components/ArrayRow/ArrayRow.module.css","components/Array/Array.module.css","components/Inputs/Inputs.module.css","components/ArrayCell/ArrayCell.module.css","components/AvarageRow/AvarageRow.module.css","components/AddLineButton/AddLineButton.module.css","components/App/App.module.css","redux/types.js","services/randomArray.js","components/Inputs/Inputs.jsx","redux/actions.js","redux/selectors.js","services/closestNumbers.js","components/ArrayCell/ArrayCell.jsx","components/ArrayRow/ArrayRow.jsx","components/AvarageRow/AvarageRow.jsx","components/AddLineButton/AddLineButton.jsx","components/Array/Array.jsx","components/App/App.jsx","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","types","REMOVE_LINE","ADD_LINE","SAVE_ARRAY","INCREASE","SAVE_PARAMS","ILLUMINATE","uuidv4","require","createRandomArray","lines","columns","array","i","id","cells","j","amount","Math","floor","random","Inputs","state","m","n","x","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","onSaveParams","onSaveArray","alert","this","className","styles","formWrapper","formTitle","form","onSubmit","inputWrapper","for","label","input","type","name","onChange","placeholder","submitButton","Component","connect","dispatch","payload","actions","params","getArray","getColumnsQty","Number","getNumbersQty","getIlluminated","illuminated","getLine","find","line","getCell","lineId","cell","getAvarageRow","createSelector","columnQty","avarageRow","columnTotal","length","push","toFixed","getClosestNumbers","element","numbersQty","inlineArray","reduce","acc","sort","a","b","abs","closestNumbersIds","slice","map","includes","ArrayCell","hoverOnHandler","numberQty","onHover","hoverOffHandler","sum","sumHover","onIncrease","bg","background","percents","simpleTd","onClick","onMouseEnter","onMouseLeave","style","selectors","closestNumbers","ArrayRow","hoverHandler","onRemove","key","sumCell","class","removeButtonTd","removeButton","ownProps","averageRow","avarageTd","AddLineButton","addHandler","lineLength","onAdd","button","newLine","tableWrapper","table","addCell","colspan","App","container","action","el","reducer","combineReducers","undefined","filter","l","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c93acf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sumCell\":\"ArrayRow_sumCell__3n7Ta\",\"removeButton\":\"ArrayRow_removeButton__1w377 AddLineButton_button__16NY0\",\"removeButtonTd\":\"ArrayRow_removeButtonTd__1yrTV Array_addCell__3PXuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Array_tableWrapper__3r1cA\",\"table\":\"Array_table__1EVmf\",\"addCell\":\"Array_addCell__3PXuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Inputs_formWrapper__3qvIq\",\"form\":\"Inputs_form__2CPZL\",\"formTitle\":\"Inputs_formTitle__8nqar\",\"inputWrapper\":\"Inputs_inputWrapper__1ECfZ\",\"label\":\"Inputs_label__2t_1J\",\"input\":\"Inputs_input__u-M3Q\",\"submitButton\":\"Inputs_submitButton__BGAA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simpleTd\":\"ArrayCell_simpleTd__3ouJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avarageTd\":\"AvarageRow_avarageTd__ZvmOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddLineButton_button__16NY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1wjkN\"};","const types = {\r\n  REMOVE_LINE: \"REMOVE_LINE\",\r\n  ADD_LINE: \"ADD_LINE\",\r\n  SAVE_ARRAY: \"SAVE_ARRAY\",\r\n  INCREASE: \"INCREASE\",\r\n  SAVE_PARAMS: \"SAVE_PARAMS\",\r\n  ILLUMINATE: \"ILLUMINATE\"\r\n};\r\n\r\nexport default types;\r\n","const uuidv4 = require(\"uuid/v4\");\r\n\r\nconst createRandomArray = (lines, columns) => {\r\n  const array = [];\r\n\r\n  for (let i = 0; i < lines; i++) {\r\n    array[i] = { id: uuidv4(), cells: [] };\r\n    for (let j = 0; j < columns; j++) {\r\n      array[i].cells[j] = {\r\n        id: uuidv4(),\r\n        amount: Math.floor(Math.random() * 1000)\r\n      };\r\n    }\r\n  }\r\n  return array;\r\n};\r\n\r\nexport default createRandomArray;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport createRandomArray from \"../../services/randomArray\";\r\nimport styles from \"./Inputs.module.css\";\r\n\r\nclass Inputs extends Component {\r\n  state = { m: \"\", n: \"\", x: \"\" };\r\n\r\n  inputHandler = e => {\r\n    const { id, value } = e.target;\r\n    switch (id) {\r\n      case \"m\":\r\n        this.setState(state => ({ ...state, m: value }));\r\n        break;\r\n      case \"n\":\r\n        this.setState(state => ({ ...state, n: value }));\r\n        break;\r\n      case \"x\":\r\n        this.setState(state => ({ ...state, x: value }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const { m, n, x } = this.state;\r\n    const { onSaveParams, onSaveArray } = this.props;\r\n    if (m <= 0 || n <= 0 || x < 0) {\r\n      alert(\"array parameters must be more then 0\");\r\n      return;\r\n    }\r\n    onSaveArray(createRandomArray(m, n));\r\n    onSaveParams({ n, x });\r\n\r\n    this.setState({ m: \"\", n: \"\", x: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { m, n, x } = this.state;\r\n    return (\r\n      <div className={styles.formWrapper}>\r\n        <h1 className={styles.formTitle}>Enter table parameters</h1>\r\n        <form className={styles.form} onSubmit={this.submitHandler}>\r\n          <div className={styles.inputWrapper}>\r\n            <label for=\"m\" className={styles.label}>\r\n              Lines quantity:\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"number\"\r\n              name=\"lines\"\r\n              id=\"m\"\r\n              onChange={this.inputHandler}\r\n              value={m}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n          <div className={styles.inputWrapper}>\r\n            <label for=\"n\" className={styles.label}>\r\n              Columns quantity:\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"number\"\r\n              name=\"columns\"\r\n              id=\"n\"\r\n              onChange={this.inputHandler}\r\n              value={n}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n          <div className={styles.inputWrapper}>\r\n            <label for=\"m\" className={styles.label}>\r\n              Illuminated cells quantity:\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"number\"\r\n              name=\"illuminate\"\r\n              id=\"x\"\r\n              onChange={this.inputHandler}\r\n              value={x}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              className={styles.submitButton}\r\n              type=\"submit\"\r\n              value=\"Generate\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSaveArray: array => dispatch(actions.saveArray(array)),\r\n    onSaveParams: params => dispatch(actions.saveParams(params))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Inputs);\r\n","import types from \"./types\";\r\n\r\nexport const removeLine = id => {\r\n  return {\r\n    type: types.REMOVE_LINE,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const addLine = newLine => {\r\n  return {\r\n    type: types.ADD_LINE,\r\n    payload: { newLine }\r\n  };\r\n};\r\n\r\nexport const saveArray = array => {\r\n  return {\r\n    type: types.SAVE_ARRAY,\r\n    payload: { array }\r\n  };\r\n};\r\n\r\nexport const increase = (id, lineId) => {\r\n  return {\r\n    type: types.INCREASE,\r\n    payload: { id, lineId }\r\n  };\r\n};\r\n\r\nexport const saveParams = params => {\r\n  return {\r\n    type: types.SAVE_PARAMS,\r\n    payload: { params }\r\n  };\r\n};\r\n\r\nexport const illuminate = illuminated => {\r\n  return {\r\n    type: types.ILLUMINATE,\r\n    payload: { illuminated }\r\n  };\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getArray = state => state.array;\r\n\r\nexport const getColumnsQty = state => Number(state.params.n);\r\n\r\nexport const getNumbersQty = state => Number(state.params.x);\r\n\r\nexport const getIlluminated = state => state.illuminated;\r\n\r\nexport const getLine = (state, id) => {\r\n  return getArray(state).find(line => line.id === id);\r\n};\r\n\r\nexport const getCell = (state, id, lineId) => {\r\n  return getLine(state, lineId).cells.find(cell => cell.id === id);\r\n};\r\n\r\nconst uuidv4 = require(\"uuid/v4\");\r\n\r\nexport const getAvarageRow = createSelector(\r\n  [getArray, getColumnsQty],\r\n  (array, columnQty) => {\r\n    const avarageRow = [];\r\n    for (let j = 0; j < columnQty; j++) {\r\n      let columnTotal = 0;\r\n      for (let i = 0; i < array.length; i++) {\r\n        columnTotal += array[i].cells[j].amount;\r\n      }\r\n      avarageRow.push({\r\n        id: uuidv4(),\r\n        amount: (columnTotal / array.length).toFixed(2)\r\n      });\r\n    }\r\n    return avarageRow;\r\n  }\r\n);\r\n","const getClosestNumbers = (array, element, numbersQty) => {\r\n  let inlineArray = array.reduce((acc, line) => [...acc, ...line.cells], []);\r\n\r\n  if (numbersQty >= inlineArray.length - 1) {\r\n    return inlineArray;\r\n  }\r\n\r\n  inlineArray.sort(\r\n    (a, b) =>\r\n      Math.abs(a.amount - element.amount) - Math.abs(b.amount - element.amount)\r\n  );\r\n  const closestNumbers = inlineArray.slice(0, numbersQty + 1);\r\n\r\n  const closestNumbersIds = closestNumbers.map(element => element.id);\r\n\r\n  if (closestNumbersIds.includes(element.id)) {\r\n    return closestNumbersIds;\r\n  }\r\n  return [element.id, ...closestNumbersIds.slice(1, numbersQty + 1)];\r\n};\r\n\r\nexport default getClosestNumbers;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport getClosestNumbers from \"../../services/closestNumbers\";\r\nimport styles from \"./ArrayCell.module.css\";\r\n\r\nclass ArrayCell extends Component {\r\n  hoverOnHandler = () => {\r\n    const { array, numberQty, element, onHover } = this.props;\r\n    const closestNumbers = getClosestNumbers(array, element, numberQty);\r\n    onHover(closestNumbers);\r\n  };\r\n\r\n  hoverOffHandler = () => {\r\n    const { onHover } = this.props;\r\n    onHover([]);\r\n  };\r\n\r\n  render() {\r\n    const { element, sum, sumHover, onIncrease, id, illuminated } = this.props;\r\n\r\n    let bg = {\r\n      background:\r\n        \"linear-gradient(110deg,#eee 0%,#e3e3e3 10%,#fff 20%,#fff 25%,#f0f0f0 26%,#fff 28%,#ddd 55%,#eee 100%)\"\r\n    };\r\n\r\n    const percents = (element.amount / sum) * 100;\r\n\r\n    if (illuminated.length > 0 && illuminated.includes(element.id)) {\r\n      bg.background =\r\n        \"linear-gradient(110deg, #f90c04 0%, #ed413b 10%, #fff 20%, #fff 25%, #f0f0f0 26%, #fff 28%, #f53d37 55%, #f90c04 100%)\";\r\n    }\r\n\r\n    if (sumHover) {\r\n      bg.background = `linear-gradient(to top, #fff200, #1e9600 ${percents}%, transparent ${percents}%)`;\r\n    }\r\n\r\n    return (\r\n      <td\r\n        className={styles.simpleTd}\r\n        onClick={onIncrease}\r\n        id={id}\r\n        onMouseEnter={this.hoverOnHandler}\r\n        onMouseLeave={this.hoverOffHandler}\r\n        style={bg}\r\n      >\r\n        {sumHover ? percents.toFixed(1) + \"%\" : element.amount}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, { id, lineId }) => {\r\n  return {\r\n    array: selectors.getArray(state),\r\n    numberQty: selectors.getNumbersQty(state),\r\n    illuminated: selectors.getIlluminated(state),\r\n    element: selectors.getCell(state, id, lineId)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { id, lineId }) => {\r\n  return {\r\n    onIncrease: () => dispatch(actions.increase(id, lineId)),\r\n    onHover: closestNumbers => dispatch(actions.illuminate(closestNumbers))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayCell);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport ArrayCell from \"../ArrayCell/ArrayCell\";\r\nimport styles from \"./ArrayRow.module.css\";\r\n\r\nclass ArrayRow extends Component {\r\n  state = { sumHover: false };\r\n\r\n  hoverHandler = () => {\r\n    this.setState(state => {\r\n      return {\r\n        sumHover: !state.sumHover\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { line, onRemove, id } = this.props;\r\n    const { sumHover } = this.state;\r\n\r\n    const sum = line.cells.reduce((sum, element) => (sum += element.amount), 0);\r\n    return (\r\n      <tr id={id}>\r\n        {line.cells.map(element => (\r\n          <ArrayCell\r\n            sumHover={sumHover}\r\n            sum={sum}\r\n            key={element.id}\r\n            id={element.id}\r\n            lineId={id}\r\n          />\r\n        ))}\r\n        <td\r\n          onMouseEnter={this.hoverHandler}\r\n          onMouseLeave={this.hoverHandler}\r\n          className={styles.sumCell}\r\n        >\r\n          {sum}\r\n        </td>\r\n        <td class={styles.removeButtonTd}>\r\n          <button class={styles.removeButton} onClick={onRemove}>\r\n            &times;\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n  return {\r\n    line: selectors.getLine(state, id)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onRemove: () => dispatch(actions.removeLine(ownProps.id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayRow);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./AvarageRow.module.css\";\r\nimport * as selectors from \"../../redux/selectors\";\r\n\r\nconst AvarageRow = ({ averageRow }) => (\r\n  <tr>\r\n    {averageRow.map(element => {\r\n      return (\r\n        <td className={styles.avarageTd} key={element.id} id={element.id}>\r\n          {element.amount}\r\n        </td>\r\n      );\r\n    })}\r\n  </tr>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    averageRow: selectors.getAvarageRow(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AvarageRow);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport createRandomArray from \"../../services/randomArray\";\r\nimport styles from \"./AddLineButton.module.css\";\r\n\r\nclass AddLineButton extends Component {\r\n  addHandler = () => {\r\n    const { lineLength, onAdd } = this.props;\r\n    onAdd(createRandomArray(1, lineLength));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button className={styles.button} onClick={this.addHandler}>\r\n        +\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAdd: newLine => dispatch(actions.addLine(newLine))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lineLength: selectors.getColumnsQty(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddLineButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ArrayRow from \"../ArrayRow\";\r\nimport AvarageRow from \"../AvarageRow\";\r\nimport AddLineButton from \"../AddLineButton\";\r\nimport styles from \"./Array.module.css\";\r\nimport * as selectors from \"../../redux/selectors\";\r\n\r\nconst Array = ({ array, columnQty }) => {\r\n  return (\r\n    array.length > 0 && (\r\n      <div className={styles.tableWrapper}>\r\n        <table className={styles.table}>\r\n          <tbody>\r\n            {array.map(line => (\r\n              <ArrayRow key={line.id} id={line.id} />\r\n            ))}\r\n            <AvarageRow />\r\n            <tr>\r\n              <td className={styles.addCell} colspan={columnQty}>\r\n                <AddLineButton />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    array: selectors.getArray(state),\r\n    columnQty: selectors.getColumnsQty(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Array);\r\n","import React from \"react\";\nimport Inputs from \"../Inputs/Inputs\";\nimport Array from \"../Array\";\nimport styles from \"./App.module.css\";\n\nconst App = () => (\n  <div className={styles.container}>\n    <Inputs />\n    <Array />\n  </div>\n);\n\nexport default App;\n","import types from \"./types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst element = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case types.INCREASE:\r\n      return state.id === payload.id\r\n        ? { ...state, amount: (state.amount += 1) }\r\n        : state;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst line = (state, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_LINE:\r\n      return action.payload.newLine;\r\n    case types.REMOVE_LINE:\r\n      return state.id !== action.payload.id;\r\n    case types.INCREASE:\r\n      if (state.id === action.payload.lineId) {\r\n        return { ...state, cells: state.cells.map(el => element(el, action)) };\r\n      }\r\n      return state;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst arrayReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ADD_LINE:\r\n      return [...state, ...line(undefined, action)];\r\n    case types.REMOVE_LINE:\r\n      return state.filter(l => line(l, action));\r\n    case types.SAVE_ARRAY:\r\n      return action.payload.array;\r\n    case types.INCREASE:\r\n      return state.map(l => line(l, action));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst paramsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_PARAMS:\r\n      return action.payload.params;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst illuminatedReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ILLUMINATE:\r\n      return action.payload.illuminated;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  array: arrayReducer,\r\n  params: paramsReducer,\r\n  illuminated: illuminatedReducer\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}