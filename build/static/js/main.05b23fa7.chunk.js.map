{"version":3,"sources":["components/Inputs/Inputs.module.css","components/Array/Array.module.css","components/ArrayRow/ArrayRow.module.css","components/ArrayCell/ArrayCell.module.css","components/SumCell/SumCell.module.css","components/AverageCell/AvarageCell.module.css","components/App/App.module.css","redux/types.js","services/randomArray.js","components/Inputs/Inputs.jsx","redux/actions.js","components/ArrayCell/ArrayCell.jsx","components/SumCell/SumCell.jsx","components/ArrayRow/ArrayRow.jsx","redux/selectors.js","components/AverageCell/AvarageCell.jsx","components/AvarageRow/AvarageRow.jsx","services/closestNumbers.js","components/Array/Array.jsx","components/App/App.jsx","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","types","SAVE_PARAMS","SAVE_ARRAY","SAVE_ROWS","SAVE_CELLS","REMOVE_ROW","ADD_ROW","INCREASE","ILLUMINATE","uuidv4","require","createRandomArray","rowsQty","columnsQty","array","rows","cells","i","rowId","j","cellId","id","amount","randomThreeDigitNumber","Math","floor","random","Inputs","state","m","n","x","inputHandler","e","target","value","setState","submitHandler","preventDefault","props","onSaveParams","onSaveArray","onSaveRows","onSaveCells","alert","this","className","styles","formWrapper","formTitle","form","onSubmit","inputWrapper","htmlFor","label","input","type","name","onChange","placeholder","submitButton","Component","connect","dispatch","params","payload","actions","React","memo","cell","onHover","offHover","illuminated","onIncrease","sumHover","sum","style","background","percents","toFixed","simpleTd","onClick","onMouseEnter","onMouseLeave","nextProps","sumCell","row","onRemove","useState","setSumHover","map","key","removeButtonTd","removeButton","getArray","getRows","getCells","getColumnsQty","Number","getIlluminatedQty","getSumColumn","createSelector","sumColumn","cellsIds","Object","values","length","rowTotal","push","getAvarageRow","avarageRow","columnTotal","averageCell","avarageTd","averageRow","selectors","index","getClosestNumbers","pointId","illuminatedQty","cellsWithoutPoint","cellsArray","pointCell","sort","a","b","abs","closestNumbersIds","slice","reduce","acc","columnQty","onAdd","setIlluminated","hoverOnHandler","closestNumbers","hoverOffHandler","increaseHandler","removeHandler","parentNode","tableWrapper","table","addCell","colSpan","addButton","App","container","reducer","combineReducers","filter","withoutDeleted","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05b23fa7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Inputs_formWrapper__3qvIq\",\"form\":\"Inputs_form__2CPZL\",\"formTitle\":\"Inputs_formTitle__8nqar\",\"inputWrapper\":\"Inputs_inputWrapper__1ECfZ\",\"label\":\"Inputs_label__2t_1J\",\"input\":\"Inputs_input__u-M3Q\",\"submitButton\":\"Inputs_submitButton__BGAA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Array_tableWrapper__3r1cA\",\"table\":\"Array_table__1EVmf\",\"addCell\":\"Array_addCell__3PXuk\",\"addButton\":\"Array_addButton__1QRXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"removeButton\":\"ArrayRow_removeButton__1w377 Array_addButton__1QRXc\",\"removeButtonTd\":\"ArrayRow_removeButtonTd__1yrTV Array_addCell__3PXuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simpleTd\":\"ArrayCell_simpleTd__3ouJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sumCell\":\"SumCell_sumCell__1CXIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avarageTd\":\"AvarageCell_avarageTd__2-KRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1wjkN\"};","const types = {\r\n  SAVE_PARAMS: \"SAVE_PARAMS\",\r\n  SAVE_ARRAY: \"SAVE_ARRAY\",\r\n  SAVE_ROWS: \"SAVE_ROWS\",\r\n  SAVE_CELLS: \"SAVE_CELLS\",\r\n\r\n  REMOVE_ROW: \"REMOVE_ROW\",\r\n  ADD_ROW: \"ADD_ROW\",\r\n\r\n  INCREASE: \"INCREASE\",\r\n  ILLUMINATE: \"ILLUMINATE\"\r\n};\r\n\r\nexport default types;\r\n","const uuidv4 = require(\"uuid/v4\");\r\n\r\nconst createRandomArray = (rowsQty, columnsQty) => {\r\n  const array = [];\r\n  const rows = {};\r\n  const cells = {};\r\n\r\n  for (let i = 0; i < rowsQty; i++) {\r\n    let rowId = uuidv4();\r\n    array[i] = rowId;\r\n    rows[rowId] = [];\r\n    for (let j = 0; j < columnsQty; j++) {\r\n      let cellId = uuidv4();\r\n      rows[rowId][j] = cellId;\r\n      cells[cellId] = { id: cellId, amount: randomThreeDigitNumber() };\r\n    }\r\n  }\r\n\r\n  return { array, rows, cells };\r\n};\r\n\r\nexport default createRandomArray;\r\n\r\nconst randomThreeDigitNumber = () => Math.floor(Math.random() * 1000);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport createRandomArray from \"../../services/randomArray\";\r\nimport styles from \"./Inputs.module.css\";\r\n\r\nclass Inputs extends Component {\r\n  state = { m: \"\", n: \"\", x: \"\" };\r\n\r\n  inputHandler = e => {\r\n    const { id, value } = e.target;\r\n    this.setState(state => ({ ...state, [id]: value }));\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const { m, n, x } = this.state;\r\n    const { onSaveParams, onSaveArray, onSaveRows, onSaveCells } = this.props;\r\n    if (m <= 0 || n <= 0 || x < 0) {\r\n      alert(\"array parameters must be more then 0\");\r\n      return;\r\n    }\r\n    onSaveParams({ n, x });\r\n    const { array, rows, cells } = createRandomArray(m, n);\r\n    onSaveArray(array);\r\n    onSaveRows(rows);\r\n    onSaveCells(cells);\r\n\r\n    this.setState({ m: \"\", n: \"\", x: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { m, n, x } = this.state;\r\n    return (\r\n      <div className={styles.formWrapper}>\r\n        <h1 className={styles.formTitle}>Enter table parameters</h1>\r\n        <form className={styles.form} onSubmit={this.submitHandler}>\r\n          <div className={styles.inputWrapper}>\r\n            <label htmlFor=\"m\" className={styles.label}>\r\n              Rows quantity:\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"number\"\r\n              name=\"rows\"\r\n              id=\"m\"\r\n              onChange={this.inputHandler}\r\n              value={m}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n          <div className={styles.inputWrapper}>\r\n            <label htmlFor=\"n\" className={styles.label}>\r\n              Columns quantity:\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"number\"\r\n              name=\"columns\"\r\n              id=\"n\"\r\n              onChange={this.inputHandler}\r\n              value={n}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n          <div className={styles.inputWrapper}>\r\n            <label htmlFor=\"m\" className={styles.label}>\r\n              Illuminated cells quantity:\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"number\"\r\n              name=\"illuminate\"\r\n              id=\"x\"\r\n              onChange={this.inputHandler}\r\n              value={x}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              className={styles.submitButton}\r\n              type=\"submit\"\r\n              value=\"Generate\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSaveParams: params => dispatch(actions.saveParams(params)),\r\n    onSaveArray: array => dispatch(actions.saveArray(array)),\r\n    onSaveRows: rows => dispatch(actions.saveRows(rows)),\r\n    onSaveCells: cells => dispatch(actions.saveCells(cells))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Inputs);\r\n","import types from \"./types\";\r\n\r\nexport const removeRow = (id, cellsIds) => {\r\n  return {\r\n    type: types.REMOVE_ROW,\r\n    payload: { id, cellsIds }\r\n  };\r\n};\r\n\r\nexport const addRow = (rowId, row, cells) => {\r\n  return {\r\n    type: types.ADD_ROW,\r\n    payload: { rowId, row, cells }\r\n  };\r\n};\r\n\r\nexport const saveArray = array => {\r\n  return {\r\n    type: types.SAVE_ARRAY,\r\n    payload: { array }\r\n  };\r\n};\r\n\r\nexport const saveRows = rows => {\r\n  return {\r\n    type: types.SAVE_ROWS,\r\n    payload: { rows }\r\n  };\r\n};\r\n\r\nexport const saveCells = cells => {\r\n  return {\r\n    type: types.SAVE_CELLS,\r\n    payload: { cells }\r\n  };\r\n};\r\n\r\nexport const increase = id => {\r\n  return {\r\n    type: types.INCREASE,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const saveParams = params => {\r\n  return {\r\n    type: types.SAVE_PARAMS,\r\n    payload: { params }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./ArrayCell.module.css\";\r\n\r\nconst areEqual = ({ illuminated, id, cell, sumHover }, nextProps) => {\r\n  if (nextProps.illuminated[id] !== illuminated[id]) {\r\n    return false;\r\n  }\r\n\r\n  if (nextProps.cell.amount !== cell.amount) {\r\n    return false;\r\n  }\r\n\r\n  if (nextProps.sumHover !== sumHover) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst ArrayCell = ({\r\n  cell,\r\n  id,\r\n  onHover,\r\n  offHover,\r\n  illuminated,\r\n  onIncrease,\r\n  sumHover,\r\n  sum\r\n}) => {\r\n  let style = {\r\n    background:\r\n      \"linear-gradient(110deg,#eee 0%,#e3e3e3 10%,#fff 20%,#fff 25%,#f0f0f0 26%,#fff 28%,#ddd 55%,#eee 100%)\"\r\n  };\r\n  let value = cell.amount;\r\n\r\n  if (illuminated[id]) {\r\n    style.background =\r\n      \"linear-gradient(110deg, #f90c04 0%, #ed413b 10%, #fff 20%, #fff 25%, #f0f0f0 26%, #fff 28%, #f53d37 55%, #f90c04 100%)\";\r\n  }\r\n\r\n  if (sumHover) {\r\n    const percents = (cell.amount / sum) * 100;\r\n    style.background = `linear-gradient(to top, #fff200, #1e9600 ${percents}%, transparent ${percents}%)`;\r\n    value = percents.toFixed(1) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <td\r\n      className={styles.simpleTd}\r\n      onClick={onIncrease}\r\n      id={id}\r\n      onMouseEnter={onHover}\r\n      onMouseLeave={offHover}\r\n      style={style}\r\n    >\r\n      {value}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default React.memo(ArrayCell, areEqual);\r\n","import React from \"react\";\r\nimport styles from \"./SumCell.module.css\";\r\n\r\nconst areEqual = ({ sum }, nextProps) => {\r\n  if (nextProps.sum !== sum) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst SumCell = ({ sum, onHover }) => (\r\n  <td onMouseEnter={onHover} onMouseLeave={onHover} className={styles.sumCell}>\r\n    {sum}\r\n  </td>\r\n);\r\n\r\nexport default React.memo(SumCell, areEqual);\r\n","import React, { useState } from \"react\";\r\nimport ArrayCell from \"../ArrayCell\";\r\nimport SumCell from \"../SumCell\";\r\nimport styles from \"./ArrayRow.module.css\";\r\n\r\nconst areEqual = ({ illuminated, row, cells }, nextProps) => {\r\n  for (let cellId of row) {\r\n    if (nextProps.illuminated[cellId] !== illuminated[cellId]) {\r\n      return false;\r\n    }\r\n    if (nextProps.cells[cellId].amount !== cells[cellId].amount) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst ArrayRow = ({\r\n  row,\r\n  id,\r\n  onHover,\r\n  offHover,\r\n  illuminated,\r\n  cells,\r\n  onIncrease,\r\n  sumCell,\r\n  onRemove\r\n}) => {\r\n  const [sumHover, setSumHover] = useState(false);\r\n\r\n  const hoverHandler = () => setSumHover(sumHover => !sumHover);\r\n\r\n  return (\r\n    <tr id={id}>\r\n      {row.map(cellId => (\r\n        <ArrayCell\r\n          sumHover={sumHover}\r\n          sum={sumCell}\r\n          key={cellId}\r\n          id={cellId}\r\n          onHover={onHover}\r\n          offHover={offHover}\r\n          illuminated={illuminated}\r\n          cell={cells[cellId]}\r\n          onIncrease={onIncrease}\r\n        />\r\n      ))}\r\n      <SumCell onHover={hoverHandler} sum={sumCell} />\r\n      <td className={styles.removeButtonTd}>\r\n        <button className={styles.removeButton} onClick={onRemove}>\r\n          &times;\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default React.memo(ArrayRow, areEqual);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getArray = state => state.array;\r\n\r\nexport const getRows = state => state.rows;\r\n\r\nexport const getCells = state => state.cells;\r\n\r\nexport const getColumnsQty = state => Number(state.params.n);\r\n\r\nexport const getIlluminatedQty = state => Number(state.params.x);\r\n\r\nexport const getSumColumn = createSelector(\r\n  [getRows, getCells],\r\n  (rows, cells) => {\r\n    const sumColumn = [];\r\n    const cellsIds = Object.values(rows);\r\n    for (let i = 0; i < cellsIds.length; i++) {\r\n      let rowTotal = 0;\r\n      for (let j = 0; j < cellsIds[i].length; j++) {\r\n        rowTotal += cells[cellsIds[i][j]].amount;\r\n      }\r\n      sumColumn.push(rowTotal);\r\n    }\r\n    return sumColumn;\r\n  }\r\n);\r\n\r\nexport const getAvarageRow = createSelector(\r\n  [getRows, getCells],\r\n  (rows, cells) => {\r\n    const avarageRow = [];\r\n    const cellsIds = Object.values(rows);\r\n    for (let j = 0; j < cellsIds[0].length; j++) {\r\n      let columnTotal = 0;\r\n      for (let i = 0; i < cellsIds.length; i++) {\r\n        columnTotal += cells[cellsIds[i][j]].amount;\r\n      }\r\n      avarageRow.push((columnTotal / cellsIds.length).toFixed(2));\r\n    }\r\n    return avarageRow;\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport styles from \"./AvarageCell.module.css\";\r\n\r\nconst AvarageCell = ({ averageCell }) => (\r\n  <td className={styles.avarageTd}>{averageCell}</td>\r\n);\r\n\r\nexport default React.memo(AvarageCell);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport AverageCell from \"../AverageCell\";\r\n\r\nconst AvarageRow = ({ averageRow }) => (\r\n  <tr>\r\n    {averageRow.map((cell, index) => (\r\n      <AverageCell key={index} averageCell={cell} />\r\n    ))}\r\n  </tr>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    averageRow: selectors.getAvarageRow(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AvarageRow);\r\n","const getClosestNumbers = (cells, pointId, illuminatedQty) => {\r\n  const { [pointId]: deleted, ...cellsWithoutPoint } = cells;\r\n  const cellsArray = Object.values(cellsWithoutPoint);\r\n\r\n  if (illuminatedQty < cellsArray.length) {\r\n    const pointCell = cells[pointId];\r\n    cellsArray.sort(\r\n      (a, b) =>\r\n        Math.abs(a.amount - pointCell.amount) -\r\n        Math.abs(b.amount - pointCell.amount)\r\n    );\r\n  }\r\n\r\n  const closestNumbers = cellsArray.slice(0, illuminatedQty);\r\n\r\n  const closestNumbersIds = closestNumbers.reduce(\r\n    (acc, cell) => ({ ...acc, [cell.id]: true }),\r\n    {}\r\n  );\r\n\r\n  return { [pointId]: true, ...closestNumbersIds };\r\n};\r\n\r\nexport default getClosestNumbers;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ArrayRow from \"../ArrayRow\";\r\nimport AvarageRow from \"../AvarageRow\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport getClosestNumbers from \"../../services/closestNumbers\";\r\nimport createRandomArray from \"../../services/randomArray\";\r\nimport styles from \"./Array.module.css\";\r\n\r\nconst Array = ({\r\n  array,\r\n  rows,\r\n  cells,\r\n  illuminatedQty,\r\n  onIncrease,\r\n  sumColumn,\r\n  onRemove,\r\n  onAdd,\r\n  columnQty\r\n}) => {\r\n  const [illuminated, setIlluminated] = useState({});\r\n\r\n  const hoverOnHandler = e => {\r\n    const { id } = e.target;\r\n    const closestNumbers = getClosestNumbers(cells, id, illuminatedQty);\r\n    setIlluminated(closestNumbers);\r\n  };\r\n\r\n  const hoverOffHandler = () => {\r\n    setIlluminated({});\r\n  };\r\n\r\n  const increaseHandler = e => {\r\n    const { id } = e.target;\r\n    onIncrease(id);\r\n  };\r\n\r\n  const removeHandler = e => {\r\n    const { id } = e.target.parentNode.parentNode;\r\n    onRemove(id, rows[id]);\r\n  };\r\n\r\n  const addHandler = () => {\r\n    const { array, rows, cells } = createRandomArray(1, columnQty);\r\n    onAdd(array, rows, cells);\r\n  };\r\n\r\n  return (\r\n    array.length > 0 && (\r\n      <div className={styles.tableWrapper}>\r\n        <table className={styles.table}>\r\n          <tbody>\r\n            {array.map((rowId, index) => (\r\n              <ArrayRow\r\n                key={rowId}\r\n                id={rowId}\r\n                row={rows[rowId]}\r\n                cells={cells}\r\n                onHover={hoverOnHandler}\r\n                offHover={hoverOffHandler}\r\n                illuminated={illuminated}\r\n                onIncrease={increaseHandler}\r\n                sumCell={sumColumn[index]}\r\n                onRemove={removeHandler}\r\n              />\r\n            ))}\r\n            <AvarageRow />\r\n            <tr>\r\n              <td className={styles.addCell} colSpan={columnQty}>\r\n                <button className={styles.addButton} onClick={addHandler}>\r\n                  +\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  array: selectors.getArray(state),\r\n  rows: selectors.getRows(state),\r\n  cells: selectors.getCells(state),\r\n  illuminatedQty: selectors.getIlluminatedQty(state),\r\n  sumColumn: selectors.getSumColumn(state),\r\n  columnQty: selectors.getColumnsQty(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIncrease: id => dispatch(actions.increase(id)),\r\n    onRemove: (id, cellsIds) => dispatch(actions.removeRow(id, cellsIds)),\r\n    onAdd: (rowId, row, cells) => dispatch(actions.addRow(rowId, row, cells))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Array));\r\n","import React from \"react\";\nimport Inputs from \"../Inputs/Inputs\";\nimport Array from \"../Array\";\nimport styles from \"./App.module.css\";\n\nconst App = () => (\n  <div className={styles.container}>\n    <Inputs />\n    <Array />\n  </div>\n);\n\nexport default App;\n","import types from \"./types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst arrayReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_ROW:\r\n      return [...state, ...payload.rowId];\r\n    case types.REMOVE_ROW:\r\n      return state.filter(rowId => rowId !== payload.id);\r\n    case types.SAVE_ARRAY:\r\n      return payload.array;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rowsReducer = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_ROW:\r\n      return { ...state, ...payload.row };\r\n    case types.REMOVE_ROW:\r\n      const { [payload.id]: deleted, ...withoutDeleted } = state;\r\n      return withoutDeleted;\r\n    case types.SAVE_ROWS:\r\n      return payload.rows;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst cellsReducer = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_ROW:\r\n      return { ...state, ...payload.cells };\r\n    case types.REMOVE_ROW:\r\n      const withoutDeleted = payload.cellsIds.reduce((acc, cellId) => {\r\n        const { [cellId]: deleted, ...withoutDeleted } = acc;\r\n        return withoutDeleted;\r\n      }, state);\r\n      return withoutDeleted;\r\n    case types.SAVE_CELLS:\r\n      return payload.cells;\r\n    case types.INCREASE:\r\n      return {\r\n        ...state,\r\n        [payload.id]: {\r\n          ...state[payload.id],\r\n          amount: state[payload.id].amount + 1\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst paramsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_PARAMS:\r\n      return action.payload.params;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  array: arrayReducer,\r\n  rows: rowsReducer,\r\n  cells: cellsReducer,\r\n  params: paramsReducer\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}